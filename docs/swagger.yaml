basePath: /api/v1
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  models.Student:
    properties:
      cpf:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      rg:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
  description: This is a sample api for Students
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API for Students
  version: "1.0"
paths:
  /students:
    get:
      consumes:
      - application/json
      description: get students
      parameters:
      - description: name search by q
        format: email
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
      summary: List students
      tags:
      - students
    post:
      consumes:
      - application/json
      description: add by json students
      parameters:
      - description: Add Student
        in: body
        name: students
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Add an students
      tags:
      - students
  /students/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by student ID
      parameters:
      - description: Student ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Student'
      summary: Delete an student
      tags:
      - students
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show an student
      tags:
      - students
    patch:
      consumes:
      - application/json
      description: Update by json Student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update an Student
      tags:
      - students
  /students/cpf/:cpf:
    get:
      consumes:
      - application/json
      description: get students
      parameters:
      - description: name search by cpf
        format: cpf
        in: query
        name: cpf
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
      summary: List students
      tags:
      - students
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
